{"version":3,"names":["bionicTextCss","getTextNodesIn","node","includeWhitespaceNodes","textNodes","nonWhitespaceMatcher","getTextNodes","nodeType","test","nodeValue","push","tagName","hasAttribute","i","end","childNodes","length","BionicText","formatContent","this","element","textNode","content","data","splitted","split","whitespaceIdx","replacement","idx","entries","document","createTextNode","start","substring","Math","ceil","embold","createElement","setAttribute","innerText","regular","replaceWith","render"],"sources":["./src/components/bionic-transform/bionic-text.css?tag=to-bionic","./src/components/bionic-transform/bionic-text.tsx"],"sourcesContent":["to-bionic:not([disabled]) span[bold] {\r\n  font-weight: bold !important;\r\n}\r\nto-bionic:not([disabled]) span[normal] {\r\n  font-weight: normal !important;\r\n}","import { Component, Element } from '@stencil/core';\r\n\r\n// From http://stackoverflow.com/a/4399718/843621\r\nconst getTextNodesIn = (node: HTMLElement, includeWhitespaceNodes: boolean = false) => {\r\n  const textNodes: Text[] = [], nonWhitespaceMatcher = /\\S/;\r\n\r\n  const getTextNodes = (node: ChildNode) => {\r\n    if (node.nodeType === 3) {\r\n      if (includeWhitespaceNodes || nonWhitespaceMatcher.test(node.nodeValue)) {\r\n        textNodes.push(node as Text);\r\n      }\r\n    } else if (!((node as HTMLElement).tagName == \"SCRIPT\" || (node as HTMLElement).hasAttribute(\"no-bionic\"))) {\r\n      for (let i = 0, end = node.childNodes.length; i < end; i++) {\r\n        getTextNodes(node.childNodes[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  getTextNodes(node);\r\n  return textNodes;\r\n}\r\n\r\n@Component({\r\n  tag: 'to-bionic',\r\n  styleUrl: 'bionic-text.css',\r\n  shadow: false\r\n})\r\nexport class BionicText {\r\n  @Element() element: HTMLElement;\r\n\r\n  formatContent() {\r\n    const textNodes = getTextNodesIn(this.element);\r\n\r\n    for (const textNode of textNodes) {\r\n      const content = textNode.data;\r\n      const splitted = content.split(/(\\s+)/g);\r\n      \r\n      const whitespaceIdx = ((/\\s+/).test(splitted[0])) ? 0 : 1;\r\n      const replacement: ChildNode[] = [];\r\n      for (const [idx, split] of splitted.entries()) {\r\n        if (idx % 2 == whitespaceIdx) {\r\n          replacement.push(document.createTextNode(split));\r\n          continue;\r\n        }\r\n\r\n        const start = split.substring(0, Math.ceil(split.length / 2));\r\n        const end = split.substring(start.length);\r\n\r\n        \r\n        const embold = document.createElement(\"span\");\r\n        embold.setAttribute(\"bold\", \"\");\r\n        embold.innerText = start;\r\n        replacement.push(embold);\r\n\r\n        if (end.length) {\r\n          const regular = document.createElement(\"span\");\r\n          regular.setAttribute(\"normal\", \"\");\r\n          regular.innerText = end;\r\n          replacement.push(regular);\r\n        }\r\n      }\r\n      textNode.replaceWith(...replacement);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.formatContent();\r\n  } \r\n}"],"mappings":"2CAAA,MAAMA,EAAgB,yICGtB,MAAMC,EAAiB,CAACC,EAAmBC,EAAkC,SAC3E,MAAMC,EAAoB,GAAIC,EAAuB,KAErD,MAAMC,EAAgBJ,IACpB,GAAIA,EAAKK,WAAa,EAAG,CACvB,GAAIJ,GAA0BE,EAAqBG,KAAKN,EAAKO,WAAY,CACvEL,EAAUM,KAAKR,E,OAEZ,KAAOA,EAAqBS,SAAW,UAAaT,EAAqBU,aAAa,cAAe,CAC1G,IAAK,IAAIC,EAAI,EAAGC,EAAMZ,EAAKa,WAAWC,OAAQH,EAAIC,EAAKD,IAAK,CAC1DP,EAAaJ,EAAKa,WAAWF,G,IAKnCP,EAAaJ,GACb,OAAOE,CAAS,E,MAQLa,EAAU,M,yBAGrBC,gBACE,MAAMd,EAAYH,EAAekB,KAAKC,SAEtC,IAAK,MAAMC,KAAYjB,EAAW,CAChC,MAAMkB,EAAUD,EAASE,KACzB,MAAMC,EAAWF,EAAQG,MAAM,UAE/B,MAAMC,EAAiB,MAAQlB,KAAKgB,EAAS,IAAO,EAAI,EACxD,MAAMG,EAA2B,GACjC,IAAK,MAAOC,EAAKH,KAAUD,EAASK,UAAW,CAC7C,GAAID,EAAM,GAAKF,EAAe,CAC5BC,EAAYjB,KAAKoB,SAASC,eAAeN,IACzC,Q,CAGF,MAAMO,EAAQP,EAAMQ,UAAU,EAAGC,KAAKC,KAAKV,EAAMT,OAAS,IAC1D,MAAMF,EAAMW,EAAMQ,UAAUD,EAAMhB,QAGlC,MAAMoB,EAASN,SAASO,cAAc,QACtCD,EAAOE,aAAa,OAAQ,IAC5BF,EAAOG,UAAYP,EACnBL,EAAYjB,KAAK0B,GAEjB,GAAItB,EAAIE,OAAQ,CACd,MAAMwB,EAAUV,SAASO,cAAc,QACvCG,EAAQF,aAAa,SAAU,IAC/BE,EAAQD,UAAYzB,EACpBa,EAAYjB,KAAK8B,E,EAGrBnB,EAASoB,eAAed,E,EAI5Be,SACEvB,KAAKD,e"}